/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.texelography.hybridinsight.datapool;

public class DataPoolOBDReadynessCode {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected DataPoolOBDReadynessCode(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DataPoolOBDReadynessCode obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        data_poolJNI.delete_DataPoolOBDReadynessCode(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setI32CatalystState(int value) {
    data_poolJNI.DataPoolOBDReadynessCode_i32CatalystState_set(swigCPtr, this, value);
  }

  public int getI32CatalystState() {
    return data_poolJNI.DataPoolOBDReadynessCode_i32CatalystState_get(swigCPtr, this);
  }

  public void setI32HeatedCatalystState(int value) {
    data_poolJNI.DataPoolOBDReadynessCode_i32HeatedCatalystState_set(swigCPtr, this, value);
  }

  public int getI32HeatedCatalystState() {
    return data_poolJNI.DataPoolOBDReadynessCode_i32HeatedCatalystState_get(swigCPtr, this);
  }

  public void setI32EVAPSystemState(int value) {
    data_poolJNI.DataPoolOBDReadynessCode_i32EVAPSystemState_set(swigCPtr, this, value);
  }

  public int getI32EVAPSystemState() {
    return data_poolJNI.DataPoolOBDReadynessCode_i32EVAPSystemState_get(swigCPtr, this);
  }

  public void setI32SecondaryAirSystemState(int value) {
    data_poolJNI.DataPoolOBDReadynessCode_i32SecondaryAirSystemState_set(swigCPtr, this, value);
  }

  public int getI32SecondaryAirSystemState() {
    return data_poolJNI.DataPoolOBDReadynessCode_i32SecondaryAirSystemState_get(swigCPtr, this);
  }

  public void setI32OxygenSensorState(int value) {
    data_poolJNI.DataPoolOBDReadynessCode_i32OxygenSensorState_set(swigCPtr, this, value);
  }

  public int getI32OxygenSensorState() {
    return data_poolJNI.DataPoolOBDReadynessCode_i32OxygenSensorState_get(swigCPtr, this);
  }

  public void setI32OxygenSensorHeaterState(int value) {
    data_poolJNI.DataPoolOBDReadynessCode_i32OxygenSensorHeaterState_set(swigCPtr, this, value);
  }

  public int getI32OxygenSensorHeaterState() {
    return data_poolJNI.DataPoolOBDReadynessCode_i32OxygenSensorHeaterState_get(swigCPtr, this);
  }

  public void setI32EGRState(int value) {
    data_poolJNI.DataPoolOBDReadynessCode_I32EGRState_set(swigCPtr, this, value);
  }

  public int getI32EGRState() {
    return data_poolJNI.DataPoolOBDReadynessCode_I32EGRState_get(swigCPtr, this);
  }

  public DataPoolOBDReadynessCode() {
    this(data_poolJNI.new_DataPoolOBDReadynessCode(), true);
  }

}
